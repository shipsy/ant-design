{"version":3,"sources":["transfer/index.jsx"],"names":["noop","Transfer","props","separatedDataSource","moveTo","direction","targetKeys","dataSource","onChange","state","sourceSelectedKeys","targetSelectedKeys","moveKeys","newMoveKeys","filter","key","some","data","disabled","newTargetKeys","concat","targetKey","indexOf","oppositeDirection","setState","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","handleSelectAll","filteredDataSource","checkAll","originalSelectedKeys","currentKeys","map","item","newKeys1","newKeys2","forEach","push","holder","selectedKeys","handleLeftSelectAll","handleRightSelectAll","handleFilter","e","onSearchChange","onSearch","value","target","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","handleSelect","selectedItem","checked","index","splice","handleLeftSelect","handleRightSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","getLocale","transferLocale","renderEmpty","oldLocale","notFoundContent","searchPlaceholder","locale","renderTransfer","getPrefixCls","customizePrefixCls","prefixCls","className","operations","showSearch","body","footer","style","listStyle","operationStyle","filterOption","render","lazy","leftFilter","rightFilter","separateDataSource","leftDataSource","rightDataSource","leftActive","length","rightActive","cls","titles","getTitles","rowKey","Array","record","indexOfKey","onSelectChange","defaultLocale","nextProps","includes","React","Component","List","Operation","Search","defaultProps","propTypes","PropTypes","string","bool","array","func","height","number","object","node","oneOfType"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport warning from '../_util/warning';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { ConfigConsumer } from '../config-provider';\nimport { polyfill } from 'react-lifecycles-compat';\nfunction noop() { }\nclass Transfer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.separatedDataSource = null;\n        this.moveTo = (direction) => {\n            const { targetKeys = [], dataSource = [], onChange } = this.props;\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n            // filter the disabled options\n            const newMoveKeys = moveKeys.filter((key) => !dataSource.some(data => !!(key === data.key && data.disabled)));\n            // move items to target box\n            const newTargetKeys = direction === 'right'\n                ? newMoveKeys.concat(targetKeys)\n                : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n            // empty checked keys\n            const oppositeDirection = direction === 'right' ? 'left' : 'right';\n            this.setState({\n                [this.getSelectedKeysName(oppositeDirection)]: [],\n            });\n            this.handleSelectChange(oppositeDirection, []);\n            if (onChange) {\n                onChange(newTargetKeys, direction, newMoveKeys);\n            }\n        };\n        this.moveToLeft = () => this.moveTo('left');\n        this.moveToRight = () => this.moveTo('right');\n        this.handleSelectAll = (direction, filteredDataSource, checkAll) => {\n            const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n            const currentKeys = filteredDataSource.map(item => item.key);\n            // Only operate current keys from original selected keys\n            const newKeys1 = originalSelectedKeys.filter((key) => currentKeys.indexOf(key) === -1);\n            const newKeys2 = [...originalSelectedKeys];\n            currentKeys.forEach(key => {\n                if (newKeys2.indexOf(key) === -1) {\n                    newKeys2.push(key);\n                }\n            });\n            const holder = checkAll ? newKeys1 : newKeys2;\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleLeftSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('left', filteredDataSource, checkAll);\n        this.handleRightSelectAll = (filteredDataSource, checkAll) => this.handleSelectAll('right', filteredDataSource, checkAll);\n        this.handleFilter = (direction, e) => {\n            const { onSearchChange, onSearch } = this.props;\n            const value = e.target.value;\n            this.setState({\n                // add filter\n                [`${direction}Filter`]: value,\n            });\n            if (onSearchChange) {\n                warning(false, 'Transfer', '`onSearchChange` is deprecated. Please use `onSearch` instead.');\n                onSearchChange(direction, e);\n            }\n            if (onSearch) {\n                onSearch(direction, value);\n            }\n        };\n        this.handleLeftFilter = (e) => this.handleFilter('left', e);\n        this.handleRightFilter = (e) => this.handleFilter('right', e);\n        this.handleClear = (direction) => {\n            const { onSearch } = this.props;\n            this.setState({\n                [`${direction}Filter`]: '',\n            });\n            if (onSearch) {\n                onSearch(direction, '');\n            }\n        };\n        this.handleLeftClear = () => this.handleClear('left');\n        this.handleRightClear = () => this.handleClear('right');\n        this.handleSelect = (direction, selectedItem, checked) => {\n            const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n            const index = holder.indexOf(selectedItem.key);\n            if (index > -1) {\n                holder.splice(index, 1);\n            }\n            if (checked) {\n                holder.push(selectedItem.key);\n            }\n            this.handleSelectChange(direction, holder);\n            if (!this.props.selectedKeys) {\n                this.setState({\n                    [this.getSelectedKeysName(direction)]: holder,\n                });\n            }\n        };\n        this.handleLeftSelect = (selectedItem, checked) => {\n            return this.handleSelect('left', selectedItem, checked);\n        };\n        this.handleRightSelect = (selectedItem, checked) => {\n            return this.handleSelect('right', selectedItem, checked);\n        };\n        this.handleScroll = (direction, e) => {\n            const { onScroll } = this.props;\n            if (onScroll) {\n                onScroll(direction, e);\n            }\n        };\n        this.handleLeftScroll = (e) => this.handleScroll('left', e);\n        this.handleRightScroll = (e) => this.handleScroll('right', e);\n        this.getLocale = (transferLocale, renderEmpty) => {\n            // Keep old locale props still working.\n            const oldLocale = {\n                notFoundContent: renderEmpty('Transfer'),\n            };\n            if ('notFoundContent' in this.props) {\n                oldLocale.notFoundContent = this.props.notFoundContent;\n            }\n            if ('searchPlaceholder' in this.props) {\n                oldLocale.searchPlaceholder = this.props.searchPlaceholder;\n            }\n            return Object.assign({}, transferLocale, oldLocale, this.props.locale);\n        };\n        this.renderTransfer = (transferLocale) => (<ConfigConsumer>\n      {({ getPrefixCls, renderEmpty }) => {\n            const { prefixCls: customizePrefixCls, className, disabled, operations = [], showSearch, body, footer, style, listStyle, operationStyle, filterOption, render, lazy, } = this.props;\n            const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n            const locale = this.getLocale(transferLocale, renderEmpty);\n            const { leftFilter, rightFilter, sourceSelectedKeys, targetSelectedKeys } = this.state;\n            const { leftDataSource, rightDataSource } = this.separateDataSource(this.props);\n            const leftActive = targetSelectedKeys.length > 0;\n            const rightActive = sourceSelectedKeys.length > 0;\n            const cls = classNames(className, prefixCls, disabled && `${prefixCls}-disabled`);\n            const titles = this.getTitles(locale);\n            return (<div className={cls} style={style}>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[0]} dataSource={leftDataSource} filter={leftFilter} filterOption={filterOption} style={listStyle} checkedKeys={sourceSelectedKeys} handleFilter={this.handleLeftFilter} handleClear={this.handleLeftClear} handleSelect={this.handleLeftSelect} handleSelectAll={this.handleLeftSelectAll} render={render} showSearch={showSearch} body={body} footer={footer} lazy={lazy} onScroll={this.handleLeftScroll} disabled={disabled} {...locale}/>\n            <Operation className={`${prefixCls}-operation`} rightActive={rightActive} rightArrowText={operations[0]} moveToRight={this.moveToRight} leftActive={leftActive} leftArrowText={operations[1]} moveToLeft={this.moveToLeft} style={operationStyle} disabled={disabled}/>\n            <List prefixCls={`${prefixCls}-list`} titleText={titles[1]} dataSource={rightDataSource} filter={rightFilter} filterOption={filterOption} style={listStyle} checkedKeys={targetSelectedKeys} handleFilter={this.handleRightFilter} handleClear={this.handleRightClear} handleSelect={this.handleRightSelect} handleSelectAll={this.handleRightSelectAll} render={render} showSearch={showSearch} body={body} footer={footer} lazy={lazy} onScroll={this.handleRightScroll} disabled={disabled} {...locale}/>\n          </div>);\n        }}\n    </ConfigConsumer>);\n        warning(!('notFoundContent' in props || 'searchPlaceholder' in props), 'Transfer', '`notFoundContent` and `searchPlaceholder` will be removed, ' +\n            'please use `locale` instead.');\n        const { selectedKeys = [], targetKeys = [] } = props;\n        this.state = {\n            leftFilter: '',\n            rightFilter: '',\n            sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n            targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if (nextProps.selectedKeys) {\n            const targetKeys = nextProps.targetKeys || [];\n            return {\n                sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n                targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n            };\n        }\n        return null;\n    }\n    separateDataSource(props) {\n        const { dataSource, rowKey, targetKeys = [] } = props;\n        const leftDataSource = [];\n        const rightDataSource = new Array(targetKeys.length);\n        dataSource.forEach(record => {\n            if (rowKey) {\n                record.key = rowKey(record);\n            }\n            // rightDataSource should be ordered by targetKeys\n            // leftDataSource should be ordered by dataSource\n            const indexOfKey = targetKeys.indexOf(record.key);\n            if (indexOfKey !== -1) {\n                rightDataSource[indexOfKey] = record;\n            }\n            else {\n                leftDataSource.push(record);\n            }\n        });\n        return {\n            leftDataSource,\n            rightDataSource,\n        };\n    }\n    handleSelectChange(direction, holder) {\n        const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n        const onSelectChange = this.props.onSelectChange;\n        if (!onSelectChange) {\n            return;\n        }\n        if (direction === 'left') {\n            onSelectChange(holder, targetSelectedKeys);\n        }\n        else {\n            onSelectChange(sourceSelectedKeys, holder);\n        }\n    }\n    getTitles(transferLocale) {\n        const { props } = this;\n        if (props.titles) {\n            return props.titles;\n        }\n        return transferLocale.titles;\n    }\n    getSelectedKeysName(direction) {\n        return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n    }\n    render() {\n        return (<LocaleReceiver componentName=\"Transfer\" defaultLocale={defaultLocale.Transfer}>\n        {this.renderTransfer}\n      </LocaleReceiver>);\n    }\n}\n// For high-level customized Transfer @dqaria\nTransfer.List = List;\nTransfer.Operation = Operation;\nTransfer.Search = Search;\nTransfer.defaultProps = {\n    dataSource: [],\n    render: noop,\n    locale: {},\n    showSearch: false,\n};\nTransfer.propTypes = {\n    prefixCls: PropTypes.string,\n    disabled: PropTypes.bool,\n    dataSource: PropTypes.array,\n    render: PropTypes.func,\n    targetKeys: PropTypes.array,\n    onChange: PropTypes.func,\n    height: PropTypes.number,\n    style: PropTypes.object,\n    listStyle: PropTypes.object,\n    operationStyle: PropTypes.object,\n    className: PropTypes.string,\n    titles: PropTypes.array,\n    operations: PropTypes.array,\n    showSearch: PropTypes.bool,\n    filterOption: PropTypes.func,\n    searchPlaceholder: PropTypes.string,\n    notFoundContent: PropTypes.node,\n    locale: PropTypes.object,\n    body: PropTypes.func,\n    footer: PropTypes.func,\n    rowKey: PropTypes.func,\n    lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\npolyfill(Transfer);\nexport default Transfer;\n"],"file":"index.js"}