{"version":3,"sources":["badge/ScrollNumber.jsx"],"names":["getNumberArray","num","toString","split","reverse","map","i","current","Number","isNaN","ScrollNumber","props","renderScrollNumber","getPrefixCls","customizePrefixCls","prefixCls","className","style","title","component","displayComponent","restProps","newProps","borderColor","boxShadow","React","cloneElement","renderNumberElement","state","animateStarted","count","currentCount","Math","abs","lastCount","currentDigit","lastDigit","_","prevState","onAnimated","setState","position","childrenToReturn","currentClassName","push","getPositionByNum","removeTransition","undefined","transition","msTransform","WebkitTransform","transform","key","renderNumberList","renderCurrentNumber","nextProps","nextState","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { createElement, Component } from 'react';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport { polyfill } from 'react-lifecycles-compat';\nfunction getNumberArray(num) {\n    return num\n        ? num\n            .toString()\n            .split('')\n            .reverse()\n            .map(i => {\n            const current = Number(i);\n            return isNaN(current) ? i : current;\n        })\n        : [];\n}\nclass ScrollNumber extends Component {\n    constructor(props) {\n        super(props);\n        this.renderScrollNumber = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, style, title, component = 'sup', displayComponent, } = this.props;\n            // fix https://fb.me/react-unknown-prop\n            const restProps = omit(this.props, [\n                'count',\n                'onAnimated',\n                'component',\n                'prefixCls',\n                'displayComponent',\n            ]);\n            const prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n            const newProps = Object.assign({}, restProps, { className: classNames(prefixCls, className), title: title });\n            // allow specify the border\n            // mock border-color by box-shadow for compatible with old usage:\n            // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n            if (style && style.borderColor) {\n                newProps.style = Object.assign({}, style, { boxShadow: `0 0 0 1px ${style.borderColor} inset` });\n            }\n            if (displayComponent) {\n                return React.cloneElement(displayComponent, {\n                    className: classNames(`${prefixCls}-custom-component`, displayComponent.props && displayComponent.props.className),\n                });\n            }\n            return createElement(component, newProps, this.renderNumberElement(prefixCls));\n        };\n        this.state = {\n            animateStarted: true,\n            count: props.count,\n        };\n    }\n    static getDerivedStateFromProps(nextProps, nextState) {\n        if ('count' in nextProps) {\n            if (nextState.count === nextProps.count) {\n                return null;\n            }\n            return {\n                animateStarted: true,\n            };\n        }\n        return null;\n    }\n    getPositionByNum(num, i) {\n        const { count } = this.state;\n        const currentCount = Math.abs(Number(count));\n        const lastCount = Math.abs(Number(this.lastCount));\n        const currentDigit = Math.abs(getNumberArray(this.state.count)[i]);\n        const lastDigit = Math.abs(getNumberArray(this.lastCount)[i]);\n        if (this.state.animateStarted) {\n            return 10 + num;\n        }\n        // 同方向则在同一侧切换数字\n        if (currentCount > lastCount) {\n            if (currentDigit >= lastDigit) {\n                return 10 + num;\n            }\n            return 20 + num;\n        }\n        if (currentDigit <= lastDigit) {\n            return 10 + num;\n        }\n        return num;\n    }\n    componentDidUpdate(_, prevState) {\n        this.lastCount = prevState.count;\n        const { animateStarted } = this.state;\n        const { onAnimated } = this.props;\n        if (animateStarted) {\n            this.setState({\n                animateStarted: false,\n                count: this.props.count,\n            }, () => {\n                if (onAnimated) {\n                    onAnimated();\n                }\n            });\n        }\n    }\n    renderNumberList(position) {\n        const childrenToReturn = [];\n        for (let i = 0; i < 30; i++) {\n            const currentClassName = position === i ? 'current' : '';\n            childrenToReturn.push(<p key={i.toString()} className={currentClassName}>\n          {i % 10}\n        </p>);\n        }\n        return childrenToReturn;\n    }\n    renderCurrentNumber(prefixCls, num, i) {\n        if (typeof num === 'number') {\n            const position = this.getPositionByNum(num, i);\n            const removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;\n            return createElement('span', {\n                className: `${prefixCls}-only`,\n                style: {\n                    transition: removeTransition ? 'none' : undefined,\n                    msTransform: `translateY(${-position * 100}%)`,\n                    WebkitTransform: `translateY(${-position * 100}%)`,\n                    transform: `translateY(${-position * 100}%)`,\n                },\n                key: i,\n            }, this.renderNumberList(position));\n        }\n        return (<span key=\"symbol\" className={`${prefixCls}-symbol`}>\n        {num}\n      </span>);\n    }\n    renderNumberElement(prefixCls) {\n        const { count } = this.state;\n        if (count && Number(count) % 1 === 0) {\n            return getNumberArray(count)\n                .map((num, i) => this.renderCurrentNumber(prefixCls, num, i))\n                .reverse();\n        }\n        return count;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderScrollNumber}</ConfigConsumer>;\n    }\n}\nScrollNumber.defaultProps = {\n    count: null,\n    onAnimated() { },\n};\npolyfill(ScrollNumber);\nexport default ScrollNumber;\n"],"file":"ScrollNumber.js"}