{"version":3,"sources":["notification/index.jsx"],"names":["notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","defaultGetContainer","setNotificationConfig","options","duration","placement","bottom","top","getContainer","undefined","getPlacementStyle","style","left","right","getNotificationInstance","prefixCls","callback","cacheKey","Notification","newInstance","className","closeIcon","notification","typeToIcon","success","info","error","warning","notice","args","outerPrefixCls","iconNode","icon","type","iconType","autoMarginTag","description","content","message","btn","closable","onClose","onClick","key","api","open","close","Object","keys","forEach","removeNotice","config","destroy","warn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nconst notificationInstance = {};\nlet defaultDuration = 4.5;\nlet defaultTop = 24;\nlet defaultBottom = 24;\nlet defaultPlacement = 'topRight';\nlet defaultGetContainer;\nfunction setNotificationConfig(options) {\n    const { duration, placement, bottom, top, getContainer } = options;\n    if (duration !== undefined) {\n        defaultDuration = duration;\n    }\n    if (placement !== undefined) {\n        defaultPlacement = placement;\n    }\n    if (bottom !== undefined) {\n        defaultBottom = bottom;\n    }\n    if (top !== undefined) {\n        defaultTop = top;\n    }\n    if (getContainer !== undefined) {\n        defaultGetContainer = getContainer;\n    }\n}\nfunction getPlacementStyle(placement) {\n    let style;\n    switch (placement) {\n        case 'topLeft':\n            style = {\n                left: 0,\n                top: defaultTop,\n                bottom: 'auto',\n            };\n            break;\n        case 'topRight':\n            style = {\n                right: 0,\n                top: defaultTop,\n                bottom: 'auto',\n            };\n            break;\n        case 'bottomLeft':\n            style = {\n                left: 0,\n                top: 'auto',\n                bottom: defaultBottom,\n            };\n            break;\n        default:\n            style = {\n                right: 0,\n                top: 'auto',\n                bottom: defaultBottom,\n            };\n            break;\n    }\n    return style;\n}\nfunction getNotificationInstance(prefixCls, placement, callback) {\n    const cacheKey = `${prefixCls}-${placement}`;\n    if (notificationInstance[cacheKey]) {\n        callback(notificationInstance[cacheKey]);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        className: `${prefixCls}-${placement}`,\n        style: getPlacementStyle(placement),\n        getContainer: defaultGetContainer,\n        closeIcon: <Icon className={`${prefixCls}-close-icon`} type={'close'}/>,\n    }, (notification) => {\n        notificationInstance[cacheKey] = notification;\n        callback(notification);\n    });\n}\nconst typeToIcon = {\n    success: 'check-circle-o',\n    info: 'info-circle-o',\n    error: 'close-circle-o',\n    warning: 'exclamation-circle-o',\n};\nfunction notice(args) {\n    const outerPrefixCls = args.prefixCls || 'ant-notification';\n    const prefixCls = `${outerPrefixCls}-notice`;\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\n    let iconNode = null;\n    if (args.icon) {\n        iconNode = <span className={`${prefixCls}-icon`}>{args.icon}</span>;\n    }\n    else if (args.type) {\n        const iconType = typeToIcon[args.type];\n        iconNode = (<Icon className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`} type={iconType}/>);\n    }\n    const autoMarginTag = !args.description && iconNode ? (<span className={`${prefixCls}-message-single-line-auto-margin`}/>) : null;\n    getNotificationInstance(outerPrefixCls, args.placement || defaultPlacement, (notification) => {\n        notification.notice({\n            content: (<div className={iconNode ? `${prefixCls}-with-icon` : ''}>\n            {iconNode}\n            <div className={`${prefixCls}-message`}>\n              {autoMarginTag}\n              {args.message}\n            </div>\n            <div className={`${prefixCls}-description`}>{args.description}</div>\n            {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\n          </div>),\n            duration,\n            closable: true,\n            onClose: args.onClose,\n            onClick: args.onClick,\n            key: args.key,\n            style: args.style || {},\n            className: args.className,\n        });\n    });\n}\nconst api = {\n    open: notice,\n    close(key) {\n        Object.keys(notificationInstance).forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\n    },\n    config: setNotificationConfig,\n    destroy() {\n        Object.keys(notificationInstance).forEach(cacheKey => {\n            notificationInstance[cacheKey].destroy();\n            delete notificationInstance[cacheKey];\n        });\n    },\n};\n['success', 'info', 'warning', 'error'].forEach(type => {\n    api[type] = (args) => api.open(Object.assign({}, args, { type }));\n});\napi.warn = api.warning;\nexport default api;\n"],"file":"index.js"}