{"version":3,"sources":["upload/UploadList.jsx"],"names":["extname","url","temp","split","filename","length","filenameWithoutSuffix","exec","isImageFileType","type","indexOf","isImageUrl","file","thumbUrl","extension","test","UploadList","arguments","handleClose","onRemove","props","handlePreview","e","onPreview","preventDefault","previewFile","callback","reader","FileReader","onloadend","result","readAsDataURL","renderUploadList","getPrefixCls","customizePrefixCls","prefixCls","items","listType","showPreviewIcon","showRemoveIcon","locale","list","map","progress","icon","status","uploading","thumbnail","name","loadingProgress","progressAttr","percent","infoUploadingClass","linkProps","JSON","parse","preview","style","pointerEvents","opacity","previewIcon","undefined","removeIcon","removeFile","removeIconClose","actions","message","response","error","statusText","uploadError","iconAndPreview","uid","listClassNames","animationDirection","forEach","document","window","File","originFileObj","previewDataUrl","forceUpdate","React","Component","defaultProps","strokeWidth","showInfo"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport Tooltip from '../tooltip';\nimport Progress from '../progress';\nimport { ConfigConsumer } from '../config-provider';\nconst extname = (url) => {\n    if (!url) {\n        return '';\n    }\n    const temp = url.split('/');\n    const filename = temp[temp.length - 1];\n    const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n    return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\nconst isImageFileType = (type) => !!type && type.indexOf('image/') === 0;\nconst isImageUrl = (file) => {\n    if (isImageFileType(file.type)) {\n        return true;\n    }\n    const url = (file.thumbUrl || file.url);\n    const extension = extname(url);\n    if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|bmp|dpg)$/i.test(extension)) {\n        return true;\n    }\n    else if (/^data:/.test(url)) {\n        // other file types of base64\n        return false;\n    }\n    else if (extension) {\n        // other file types which have extension\n        return false;\n    }\n    return true;\n};\nexport default class UploadList extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClose = (file) => {\n            const { onRemove } = this.props;\n            if (onRemove) {\n                onRemove(file);\n            }\n        };\n        this.handlePreview = (file, e) => {\n            const { onPreview } = this.props;\n            if (!onPreview) {\n                return;\n            }\n            e.preventDefault();\n            return onPreview(file);\n        };\n        // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n        this.previewFile = (file, callback) => {\n            if (!isImageFileType(file.type)) {\n                return callback('');\n            }\n            const reader = new FileReader();\n            reader.onloadend = () => callback(reader.result);\n            reader.readAsDataURL(file);\n        };\n        this.renderUploadList = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, locale, } = this.props;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const list = items.map(file => {\n                let progress;\n                let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'}/>;\n                if (listType === 'picture' || listType === 'picture-card') {\n                    if (listType === 'picture-card' && file.status === 'uploading') {\n                        icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\n                    }\n                    else if (!file.thumbUrl && !file.url) {\n                        icon = (<Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" theme=\"twoTone\"/>);\n                    }\n                    else {\n                        const thumbnail = isImageUrl(file) ? (<img src={file.thumbUrl || file.url} alt={file.name}/>) : (<Icon type=\"file\" className={`${prefixCls}-list-item-icon`} theme=\"twoTone\"/>);\n                        icon = (<a className={`${prefixCls}-list-item-thumbnail`} onClick={e => this.handlePreview(file, e)} href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {thumbnail}\n            </a>);\n                    }\n                }\n                if (file.status === 'uploading') {\n                    // show loading icon if upload progress listener is disabled\n                    const loadingProgress = 'percent' in file ? (<Progress type=\"line\" {...this.props.progressAttr} percent={file.percent}/>) : null;\n                    progress = (<div className={`${prefixCls}-list-item-progress`} key=\"progress\">\n            {loadingProgress}\n          </div>);\n                }\n                const infoUploadingClass = classNames({\n                    [`${prefixCls}-list-item`]: true,\n                    [`${prefixCls}-list-item-${file.status}`]: true,\n                });\n                const linkProps = typeof file.linkProps === 'string' ? JSON.parse(file.linkProps) : file.linkProps;\n                const preview = file.url ? (<a target=\"_blank\" rel=\"noopener noreferrer\" className={`${prefixCls}-list-item-name`} title={file.name} {...linkProps} href={file.url} onClick={e => this.handlePreview(file, e)}>\n          {file.name}\n        </a>) : (<span className={`${prefixCls}-list-item-name`} onClick={e => this.handlePreview(file, e)} title={file.name}>\n          {file.name}\n        </span>);\n                const style = {\n                    pointerEvents: 'none',\n                    opacity: 0.5,\n                };\n                const previewIcon = showPreviewIcon ? (<a href={file.url || file.thumbUrl} target=\"_blank\" rel=\"noopener noreferrer\" style={file.url || file.thumbUrl ? undefined : style} onClick={e => this.handlePreview(file, e)} title={locale.previewFile}>\n          <Icon type=\"eye-o\"/>\n        </a>) : null;\n                const removeIcon = showRemoveIcon ? (<Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const removeIconClose = showRemoveIcon ? (<Icon type=\"close\" title={locale.removeFile} onClick={() => this.handleClose(file)}/>) : null;\n                const actions = listType === 'picture-card' && file.status !== 'uploading' ? (<span className={`${prefixCls}-list-item-actions`}>\n            {previewIcon}\n            {removeIcon}\n          </span>) : (removeIconClose);\n                let message;\n                if (file.response && typeof file.response === 'string') {\n                    message = file.response;\n                }\n                else {\n                    message = (file.error && file.error.statusText) || locale.uploadError;\n                }\n                const iconAndPreview = file.status === 'error' ? (<Tooltip title={message}>\n            {icon}\n            {preview}\n          </Tooltip>) : (<span>\n            {icon}\n            {preview}\n          </span>);\n                return (<div className={infoUploadingClass} key={file.uid}>\n          <div className={`${prefixCls}-list-item-info`}>{iconAndPreview}</div>\n          {actions}\n          <Animate transitionName=\"fade\" component=\"\">\n            {progress}\n          </Animate>\n        </div>);\n            });\n            const listClassNames = classNames({\n                [`${prefixCls}-list`]: true,\n                [`${prefixCls}-list-${listType}`]: true,\n            });\n            const animationDirection = listType === 'picture-card' ? 'animate-inline' : 'animate';\n            return (<Animate transitionName={`${prefixCls}-${animationDirection}`} component=\"div\" className={listClassNames}>\n        {list}\n      </Animate>);\n        };\n    }\n    componentDidUpdate() {\n        if (this.props.listType !== 'picture' && this.props.listType !== 'picture-card') {\n            return;\n        }\n        (this.props.items || []).forEach(file => {\n            if (typeof document === 'undefined' ||\n                typeof window === 'undefined' ||\n                !window.FileReader ||\n                !window.File ||\n                !(file.originFileObj instanceof File) ||\n                file.thumbUrl !== undefined) {\n                return;\n            }\n            file.thumbUrl = '';\n            this.previewFile(file.originFileObj, (previewDataUrl) => {\n                file.thumbUrl = previewDataUrl;\n                this.forceUpdate();\n            });\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUploadList}</ConfigConsumer>;\n    }\n}\nUploadList.defaultProps = {\n    listType: 'text',\n    progressAttr: {\n        strokeWidth: 2,\n        showInfo: false,\n    },\n    showRemoveIcon: true,\n    showPreviewIcon: true,\n};\n"],"file":"UploadList.js"}