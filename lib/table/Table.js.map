{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","noop","stopPropagation","nativeEvent","stopImmediatePropagation","getRowSelection","props","rowSelection","defaultPagination","onChange","onShowSizeChange","emptyObject","Table","getCheckboxPropsByItem","item","index","getCheckboxProps","key","getRecordKey","CheckboxPropsCache","checkboxProps","onRow","prefixCls","record","custom","store","rowKey","handleFilter","column","nextFilters","pagination","state","filters","getColumnKey","currentColumnKeys","columns","c","children","push","keys","forEach","columnKey","current","newState","filtersToSetState","getFilteredValueColumns","col","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","childrenColumnName","realIndex","expandedRowRender","findIndex","row","shiftKey","undefined","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","renderSelectionBox","type","_","handleChange","recordKey","getPopupContainer","ReactDOM","findDOMNode","generatePopupContainerFunc","scroll","handleShowSizeChange","pageSize","nextPagination","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","_a","style","className","showHeader","locale","restProps","getCurrentPageData","expandIconAsCell","mergedLocale","emptyText","classString","size","bordered","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","components","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","loading","spinning","table","defaultLocale","paginationPatchClass","hasPagination","renderPagination","createComponents","getDefaultSortOrder","getFiltersFromColumns","getDefaultPagination","getFlatData","defaultChecked","defaultCurrent","defaultPageSize","nextProps","previousState","newPagination","dataSource","getSortOrderColumns","sortState","getSortStateFromColumns","sortColumn","sortOrder","filteredValueColumns","filtersFromColumns","newFilters","isFiltersChanged","selectionInfo","selectedRows","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","filtersChanged","filteredValue","colKey","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","sorter","a","b","result","value","other","toString","sortDirections","newSortOrder","isSameColumn","methodIndex","selectionColumnClass","selections","selectionColumn","render","fixed","width","columnWidth","title","columnTitle","checkboxAllDisabled","every","some","unshift","dataIndex","total","floor","filterDropdown","sortButton","onHeaderCell","isSortColumn","colFilters","isAscend","isDescend","ascend","descend","sortTitle","colProps","onHeaderCellClick","onClick","toggleSortOrder","renderColumnTitle","Function","paginationPosition","position","getLocalData","getMaxCurrent","order","field","extra","currentDataSource","myKey","Number","MAX_VALUE","sorterFn","sort","recursiveSort","currentState","slice","getSorterFn","findColumn","values","onFilter","v","prevComponents","bodyRow","body","preBodyRow","React","Component","Column","ColumnGroup","propTypes","PropTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport RcTable from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n    if (e.nativeEvent.stopImmediatePropagation) {\n        e.nativeEvent.stopImmediatePropagation();\n    }\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nexport default class Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.CheckboxPropsCache[key]) {\n                const checkboxProps = (this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item));\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.CheckboxPropsCache[key];\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign({}, custom, { prefixCls, store: this.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign({}, this.state.filters, { [this.getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(this.getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            this.getFilteredValueColumns().forEach((col) => {\n                const columnKey = this.getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign({}, pagination, { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            let selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData(this.props.childrenColumnName);\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: void 0,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: void 0,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData(this.props.childrenColumnName);\n            const defaultSelection = this.store.getState().selectionDirty ? [] : this.getDefaultSelection();\n            const selectedRowKeys = this.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign({}, pagination, { current: this.state.pagination.current });\n            }\n            this.setState(newState);\n            this.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { selectionDirty: false, pagination })));\n            }\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => {\n                    type === 'radio'\n                        ? this.handleRadioSelect(record, index, e)\n                        : this.handleSelect(record, index, e);\n                };\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.getPopupContainer = () => {\n            return ReactDOM.findDOMNode(this);\n        };\n        this.generatePopupContainerFunc = () => {\n            const { scroll } = this.props;\n            // Use undefined to let rc component use default logic.\n            return scroll ? this.getPopupContainer : undefined;\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign({}, pagination, { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, { pagination: nextPagination })));\n            }\n        };\n        this.renderTable = (prefixCls, renderEmpty, dropdownPrefixCls, contextLocale) => {\n            const _a = this.props, { style, className, showHeader, locale } = _a, restProps = __rest(_a, [\"style\", \"className\", \"showHeader\", \"locale\"]);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            const mergedLocale = Object.assign({}, contextLocale, locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames({\n                [`${prefixCls}-${this.props.size}`]: true,\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            let columns = this.renderRowSelection(prefixCls, mergedLocale);\n            columns = this.renderColumnsDropdown(prefixCls, dropdownPrefixCls, columns, mergedLocale);\n            columns = columns.map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = this.getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable key=\"table\" {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable(prefixCls, renderEmpty, dropdownPrefixCls, locale)}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        warning(!('expandedRowRender' in props) || !('scroll' in props), 'Table', '`expandedRowRender` and `scroll` are not compatible. Please use one of them at one time.');\n        this.columns = props.columns || normalizeColumns(props.children);\n        this.createComponents(props.components);\n        this.state = Object.assign({}, this.getDefaultSortOrder(this.columns), { \n            // 减少状态\n            filters: this.getFiltersFromColumns(), pagination: this.getDefaultPagination(props), pivot: undefined });\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign({}, defaultPagination, pagination, { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    componentWillReceiveProps(nextProps) {\n        this.columns = nextProps.columns || normalizeColumns(nextProps.children);\n        if ('pagination' in nextProps || 'pagination' in this.props) {\n            this.setState(previousState => {\n                const newPagination = Object.assign({}, defaultPagination, previousState.pagination, nextProps.pagination);\n                newPagination.current = newPagination.current || 1;\n                newPagination.pageSize = newPagination.pageSize || 10;\n                return { pagination: nextProps.pagination !== false ? newPagination : emptyObject };\n            });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (this.props.rowSelection && !nextProps.rowSelection) {\n            this.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {\n            this.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        this.CheckboxPropsCache = {};\n        if (this.getSortOrderColumns(this.columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(this.columns);\n            if (sortState.sortColumn !== this.state.sortColumn ||\n                sortState.sortOrder !== this.state.sortOrder) {\n                this.setState(sortState);\n            }\n        }\n        const filteredValueColumns = this.getFilteredValueColumns(this.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = this.getFiltersFromColumns(this.columns);\n            const newFilters = Object.assign({}, this.state.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (this.isFiltersChanged(newFilters)) {\n                this.setState({ filters: newFilters });\n            }\n        }\n        this.createComponents(nextProps.components, this.props.components);\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isFiltersChanged(filters) {\n        let filtersChanged = false;\n        if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {\n            filtersChanged = true;\n        }\n        else {\n            Object.keys(filters).forEach(columnKey => {\n                if (filters[columnKey] !== this.state.filters[columnKey]) {\n                    filtersChanged = true;\n                }\n            });\n        }\n        return filtersChanged;\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => 'sortOrder' in column);\n    }\n    getFilteredValueColumns(columns) {\n        return flatFilter(columns || this.columns || [], (column) => typeof column.filteredValue !== 'undefined');\n    }\n    getFiltersFromColumns(columns) {\n        const filters = {};\n        this.getFilteredValueColumns(columns).forEach((col) => {\n            const colKey = this.getColumnKey(col);\n            filters[colKey] = col.filteredValue;\n        });\n        return filters;\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    isSameColumn(a, b) {\n        if (a && b && a.key && a.key === b.key) {\n            return true;\n        }\n        return (a === b ||\n            shallowEqual(a, b, (value, other) => {\n                if (typeof value === 'function' && typeof other === 'function') {\n                    return value === other || value.toString() === other.toString();\n                }\n            }));\n    }\n    toggleSortOrder(column) {\n        if (!column.sorter) {\n            return;\n        }\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (this.isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        const newState = {\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign({}, this.state, newState)));\n        }\n    }\n    renderRowSelection(prefixCls, locale) {\n        const { rowSelection, childrenColumnName } = this.props;\n        const columns = this.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData(childrenColumnName).filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc()}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    getColumnKey(column, index) {\n        return column.key || column.dataIndex || index;\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return this.getColumnKey(sortColumn) === this.getColumnKey(column);\n    }\n    renderColumnsDropdown(prefixCls, dropdownPrefixCls, columns, locale) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = this.getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc()} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign({}, column, { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n            });\n        }\n        return title;\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        if (state.sortColumn && state.sortOrder) {\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n            sorter.field = state.sortColumn.dataIndex;\n            sorter.columnKey = this.getColumnKey(state.sortColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.columns, c => {\n            if (this.getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.filter((_, i) => {\n                return i >= (current - 1) * pageSize && i < current * pageSize;\n            });\n        }\n        return data;\n    }\n    getFlatData() {\n        return flatArray(this.getLocalData(null, false));\n    }\n    getFlatCurrentPageData(childrenColumnName) {\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign({}, item, { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    createComponents(components = {}, prevComponents) {\n        const bodyRow = components && components.body && components.body.row;\n        const preBodyRow = prevComponents && prevComponents.body && prevComponents.body.row;\n        if (!this.row || bodyRow !== preBodyRow) {\n            this.row = createBodyRow(bodyRow);\n        }\n        this.components = Object.assign({}, components, { body: Object.assign({}, components.body, { row: this.row }) });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.Column = Column;\nTable.ColumnGroup = ColumnGroup;\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n};\n"],"file":"Table.js"}