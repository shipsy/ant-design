{"version":3,"sources":["affix/utils.js"],"names":["addEventListener","TRIGGER_EVENTS","observerEntities","addObserveTarget","target","affix","entity","find","item","affixList","push","eventHandlers","forEach","eventName","event","updatePosition","removeObserveTarget","observerEntity","oriObserverEntity","hasAffix","some","filter","length","handler","remove","getTargetRect","window","getBoundingClientRect","top","bottom","innerHeight"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,iCAA7B,C,CACA;;AACA,IAAMC,cAAc,GAAG,CACnB,QADmB,EAEnB,QAFmB,EAGnB,YAHmB,EAInB,WAJmB,EAKnB,UALmB,EAMnB,UANmB,EAOnB,MAPmB,CAAvB;AASA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAC5C,MAAI,CAACD,MAAL,EACI;AACJ,MAAIE,MAAM,GAAGJ,gBAAgB,CAACK,IAAjB,CAAsB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACJ,MAAL,KAAgBA,MAApB;AAAA,GAA1B,CAAb;;AACA,MAAIE,MAAJ,EAAY;AACRA,IAAAA,MAAM,CAACG,SAAP,CAAiBC,IAAjB,CAAsBL,KAAtB;AACH,GAFD,MAGK;AACDC,IAAAA,MAAM,GAAG;AACLF,MAAAA,MAAM,EAANA,MADK;AAELK,MAAAA,SAAS,EAAE,CAACJ,KAAD,CAFN;AAGLM,MAAAA,aAAa,EAAE;AAHV,KAAT;AAKAT,IAAAA,gBAAgB,CAACQ,IAAjB,CAAsBJ,MAAtB,EANC,CAOD;;AACAL,IAAAA,cAAc,CAACW,OAAf,CAAuB,UAAAC,SAAS,EAAI;AAChCP,MAAAA,MAAM,CAACK,aAAP,CAAqBE,SAArB,IAAkCb,gBAAgB,CAACI,MAAD,EAASS,SAAT,EAAoB,UAACC,KAAD,EAAW;AAC7ER,QAAAA,MAAM,CAACG,SAAP,CAAiBG,OAAjB,CAAyB,UAAAP,KAAK,EAAI;AAC9BA,UAAAA,KAAK,CAACU,cAAN,CAAqBD,KAArB;AACH,SAFD;AAGH,OAJiD,CAAlD;AAKH,KAND;AAOH;AACJ;AACD,OAAO,SAASE,mBAAT,CAA6BX,KAA7B,EAAoC;AACvC,MAAMY,cAAc,GAAGf,gBAAgB,CAACK,IAAjB,CAAsB,UAAAW,iBAAiB,EAAI;AAC9D,QAAMC,QAAQ,GAAGD,iBAAiB,CAACT,SAAlB,CAA4BW,IAA5B,CAAiC,UAAAZ,IAAI;AAAA,aAAIA,IAAI,KAAKH,KAAb;AAAA,KAArC,CAAjB;;AACA,QAAIc,QAAJ,EAAc;AACVD,MAAAA,iBAAiB,CAACT,SAAlB,GAA8BS,iBAAiB,CAACT,SAAlB,CAA4BY,MAA5B,CAAmC,UAAAb,IAAI;AAAA,eAAIA,IAAI,KAAKH,KAAb;AAAA,OAAvC,CAA9B;AACH;;AACD,WAAOc,QAAP;AACH,GANsB,CAAvB;;AAOA,MAAIF,cAAc,IAAIA,cAAc,CAACR,SAAf,CAAyBa,MAAzB,KAAoC,CAA1D,EAA6D;AACzDpB,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACmB,MAAjB,CAAwB,UAAAb,IAAI;AAAA,aAAIA,IAAI,KAAKS,cAAb;AAAA,KAA5B,CAAnB,CADyD,CAEzD;;AACAhB,IAAAA,cAAc,CAACW,OAAf,CAAuB,UAAAC,SAAS,EAAI;AAChC,UAAMU,OAAO,GAAGN,cAAc,CAACN,aAAf,CAA6BE,SAA7B,CAAhB;;AACA,UAAIU,OAAO,IAAIA,OAAO,CAACC,MAAvB,EAA+B;AAC3BD,QAAAA,OAAO,CAACC,MAAR;AACH;AACJ,KALD;AAMH;AACJ;AACD,OAAO,SAASC,aAAT,CAAuBrB,MAAvB,EAA+B;AAClC,SAAOA,MAAM,KAAKsB,MAAX,GACDtB,MAAM,CAACuB,qBAAP,EADC,GAED;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,MAAM,EAAEH,MAAM,CAACI;AAAzB,GAFN;AAGH","sourcesContent":["import addEventListener from 'rc-util/lib/Dom/addEventListener';\n// ======================== Observer ========================\nconst TRIGGER_EVENTS = [\n    'resize',\n    'scroll',\n    'touchstart',\n    'touchmove',\n    'touchend',\n    'pageshow',\n    'load',\n];\nlet observerEntities = [];\nexport function addObserveTarget(target, affix) {\n    if (!target)\n        return;\n    let entity = observerEntities.find(item => item.target === target);\n    if (entity) {\n        entity.affixList.push(affix);\n    }\n    else {\n        entity = {\n            target,\n            affixList: [affix],\n            eventHandlers: {},\n        };\n        observerEntities.push(entity);\n        // Add listener\n        TRIGGER_EVENTS.forEach(eventName => {\n            entity.eventHandlers[eventName] = addEventListener(target, eventName, (event) => {\n                entity.affixList.forEach(affix => {\n                    affix.updatePosition(event);\n                });\n            });\n        });\n    }\n}\nexport function removeObserveTarget(affix) {\n    const observerEntity = observerEntities.find(oriObserverEntity => {\n        const hasAffix = oriObserverEntity.affixList.some(item => item === affix);\n        if (hasAffix) {\n            oriObserverEntity.affixList = oriObserverEntity.affixList.filter(item => item !== affix);\n        }\n        return hasAffix;\n    });\n    if (observerEntity && observerEntity.affixList.length === 0) {\n        observerEntities = observerEntities.filter(item => item !== observerEntity);\n        // Remove listener\n        TRIGGER_EVENTS.forEach(eventName => {\n            const handler = observerEntity.eventHandlers[eventName];\n            if (handler && handler.remove) {\n                handler.remove();\n            }\n        });\n    }\n}\nexport function getTargetRect(target) {\n    return target !== window\n        ? target.getBoundingClientRect()\n        : { top: 0, bottom: window.innerHeight };\n}\n"],"file":"utils.js"}