{"version":3,"sources":["checkbox/Group.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","React","PropTypes","polyfill","classNames","shallowEqual","omit","Checkbox","ConfigConsumer","CheckboxGroup","props","toggleOption","option","optionIndex","state","value","push","splice","setState","onChange","renderGroup","getPrefixCls","customizePrefixCls","prefixCls","className","style","options","restProps","groupPrefixCls","domProps","children","getOptions","map","toString","disabled","label","classString","defaultValue","checkboxGroup","name","nextProps","nextState","Component","defaultProps","propTypes","array","isRequired","func","childContextTypes","any"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport omit from 'omit.js';\nimport Checkbox from './Checkbox';\nimport { ConfigConsumer } from '../config-provider';\nclass CheckboxGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleOption = (option) => {\n            const optionIndex = this.state.value.indexOf(option.value);\n            const value = [...this.state.value];\n            if (optionIndex === -1) {\n                value.push(option.value);\n            }\n            else {\n                value.splice(optionIndex, 1);\n            }\n            if (!('value' in this.props)) {\n                this.setState({ value });\n            }\n            const onChange = this.props.onChange;\n            if (onChange) {\n                onChange(value);\n            }\n        };\n        this.renderGroup = ({ getPrefixCls }) => {\n            const { props, state } = this;\n            const { prefixCls: customizePrefixCls, className, style, options } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"options\"]);\n            const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n            const groupPrefixCls = `${prefixCls}-group`;\n            const domProps = omit(restProps, ['children', 'defaultValue', 'value', 'onChange', 'disabled']);\n            let children = props.children;\n            if (options && options.length > 0) {\n                children = this.getOptions().map(option => (<Checkbox prefixCls={prefixCls} key={option.value.toString()} disabled={'disabled' in option ? option.disabled : props.disabled} value={option.value} checked={state.value.indexOf(option.value) !== -1} onChange={option.onChange} className={`${groupPrefixCls}-item`}>\n          {option.label}\n        </Checkbox>));\n            }\n            const classString = classNames(groupPrefixCls, className);\n            return (<div className={classString} style={style} {...domProps}>\n        {children}\n      </div>);\n        };\n        this.state = {\n            value: props.value || props.defaultValue || [],\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value || [],\n            };\n        }\n        return null;\n    }\n    getChildContext() {\n        return {\n            checkboxGroup: {\n                toggleOption: this.toggleOption,\n                value: this.state.value,\n                disabled: this.props.disabled,\n                name: this.props.name,\n            },\n        };\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n    getOptions() {\n        const { options } = this.props;\n        // https://github.com/Microsoft/TypeScript/issues/7960\n        return options.map(option => {\n            if (typeof option === 'string') {\n                return {\n                    label: option,\n                    value: option,\n                };\n            }\n            return option;\n        });\n    }\n    render() {\n        return <ConfigConsumer>{this.renderGroup}</ConfigConsumer>;\n    }\n}\nCheckboxGroup.defaultProps = {\n    options: [],\n};\nCheckboxGroup.propTypes = {\n    defaultValue: PropTypes.array,\n    value: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    onChange: PropTypes.func,\n};\nCheckboxGroup.childContextTypes = {\n    checkboxGroup: PropTypes.any,\n};\npolyfill(CheckboxGroup);\nexport default CheckboxGroup;\n"],"file":"Group.js"}