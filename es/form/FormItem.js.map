{"version":3,"sources":["form/FormItem.jsx"],"names":["React","ReactDOM","PropTypes","classNames","Animate","Row","Col","Icon","ConfigConsumer","warning","tuple","FIELD_META_PROP","FIELD_DATA_PROP","FormContext","ValidateStatuses","intersperseSpace","list","reduce","current","item","slice","FormItem","arguments","helpShow","onHelpAnimEnd","_key","setState","onLabelClick","id","props","getId","formItemNode","findDOMNode","control","querySelector","focus","renderFormItem","getPrefixCls","customizePrefixCls","prefixCls","style","className","children","renderChildren","itemClassName","help","validateStatus","getControls","length","undefined","getOnlyControl","getField","errors","map","e","index","node","isValidElement","message","cloneElement","key","recursively","controls","childrenArray","Children","toArray","i","child","type","displayName","push","concat","prop","getChildProp","getHelpMessage","extra","onlyControl","field","validating","fieldValue","value","getMeta","initialValue","c1","c2","c3","getValidateStatus","classes","hasFeedback","iconType","icon","contextWrapperCol","wrapperCol","vertical","mergedWrapperCol","required","meta","validate","filter","rules","some","rule","labelAlign","contextLabelCol","labelCol","contextColon","colon","label","isRequired","mergedLabelCol","labelClsBasic","labelColClassName","labelChildren","computedColon","haveColon","trim","replace","labelClassName","renderLabel","renderWrapper","renderValidateWrapper","renderHelp","renderExtra","Component","defaultProps","propTypes","string","oneOfType","object","bool","oneOf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport { FormContext } from './context';\nconst ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\nfunction intersperseSpace(list) {\n    return list.reduce((current, item) => [...current, ' ', item], []).slice(1);\n}\nexport default class FormItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.helpShow = false;\n        this.onHelpAnimEnd = (_key, helpShow) => {\n            this.helpShow = helpShow;\n            if (!helpShow) {\n                this.setState({});\n            }\n        };\n        // Resolve duplicated ids bug between different forms\n        // https://github.com/ant-design/ant-design/issues/7351\n        this.onLabelClick = () => {\n            const id = this.props.id || this.getId();\n            if (!id) {\n                return;\n            }\n            const formItemNode = ReactDOM.findDOMNode(this);\n            const control = formItemNode.querySelector(`[id=\"${id}\"]`);\n            if (control && control.focus) {\n                control.focus();\n            }\n        };\n        this.renderFormItem = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, style, className } = this.props;\n            const prefixCls = getPrefixCls('form', customizePrefixCls);\n            const children = this.renderChildren(prefixCls);\n            const itemClassName = {\n                [`${prefixCls}-item`]: true,\n                [`${prefixCls}-item-with-help`]: this.helpShow,\n                [`${className}`]: !!className,\n            };\n            return (<Row className={classNames(itemClassName)} style={style} key=\"row\">\n        {children}\n      </Row>);\n        };\n    }\n    componentDidMount() {\n        const { children, help, validateStatus } = this.props;\n        warning(this.getControls(children, true).length <= 1 ||\n            (help !== undefined || validateStatus !== undefined), 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' +\n            'while there are more than one `getFieldDecorator` in it.');\n    }\n    getHelpMessage() {\n        const { help } = this.props;\n        if (help === undefined && this.getOnlyControl()) {\n            const { errors } = this.getField();\n            if (errors) {\n                return intersperseSpace(errors.map((e, index) => {\n                    let node = null;\n                    if (React.isValidElement(e)) {\n                        node = e;\n                    }\n                    else if (React.isValidElement(e.message)) {\n                        node = e.message;\n                    }\n                    return node ? React.cloneElement(node, { key: index }) : e.message;\n                }));\n            }\n            return '';\n        }\n        return help;\n    }\n    getControls(children, recursively) {\n        let controls = [];\n        const childrenArray = React.Children.toArray(children);\n        for (let i = 0; i < childrenArray.length; i++) {\n            if (!recursively && controls.length > 0) {\n                break;\n            }\n            const child = childrenArray[i];\n            if (child.type &&\n                (child.type === FormItem || child.type.displayName === 'FormItem')) {\n                continue;\n            }\n            if (!child.props) {\n                continue;\n            }\n            if (FIELD_META_PROP in child.props) {\n                // And means FIELD_DATA_PROP in child.props, too.\n                controls.push(child);\n            }\n            else if (child.props.children) {\n                controls = controls.concat(this.getControls(child.props.children, recursively));\n            }\n        }\n        return controls;\n    }\n    getOnlyControl() {\n        const child = this.getControls(this.props.children, false)[0];\n        return child !== undefined ? child : null;\n    }\n    getChildProp(prop) {\n        const child = this.getOnlyControl();\n        return child && child.props && child.props[prop];\n    }\n    getId() {\n        return this.getChildProp('id');\n    }\n    getMeta() {\n        return this.getChildProp(FIELD_META_PROP);\n    }\n    getField() {\n        return this.getChildProp(FIELD_DATA_PROP);\n    }\n    renderHelp(prefixCls) {\n        const help = this.getHelpMessage();\n        const children = help ? (<div className={`${prefixCls}-explain`} key=\"help\">\n        {help}\n      </div>) : null;\n        if (children) {\n            this.helpShow = !!children;\n        }\n        return (<Animate transitionName=\"show-help\" component=\"\" transitionAppear key=\"help\" onEnd={this.onHelpAnimEnd}>\n        {children}\n      </Animate>);\n    }\n    renderExtra(prefixCls) {\n        const { extra } = this.props;\n        return extra ? <div className={`${prefixCls}-extra`}>{extra}</div> : null;\n    }\n    getValidateStatus() {\n        const onlyControl = this.getOnlyControl();\n        if (!onlyControl) {\n            return '';\n        }\n        const field = this.getField();\n        if (field.validating) {\n            return 'validating';\n        }\n        if (field.errors) {\n            return 'error';\n        }\n        const fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n        if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n            return 'success';\n        }\n        return '';\n    }\n    renderValidateWrapper(prefixCls, c1, c2, c3) {\n        const { props } = this;\n        const onlyControl = this.getOnlyControl;\n        const validateStatus = props.validateStatus === undefined && onlyControl\n            ? this.getValidateStatus()\n            : props.validateStatus;\n        let classes = `${prefixCls}-item-control`;\n        if (validateStatus) {\n            classes = classNames(`${prefixCls}-item-control`, {\n                'has-feedback': props.hasFeedback || validateStatus === 'validating',\n                'has-success': validateStatus === 'success',\n                'has-warning': validateStatus === 'warning',\n                'has-error': validateStatus === 'error',\n                'is-validating': validateStatus === 'validating',\n            });\n        }\n        let iconType = '';\n        switch (validateStatus) {\n            case 'success':\n                iconType = 'check-circle';\n                break;\n            case 'warning':\n                iconType = 'exclamation-circle';\n                break;\n            case 'error':\n                iconType = 'close-circle';\n                break;\n            case 'validating':\n                iconType = 'loading';\n                break;\n            default:\n                iconType = '';\n                break;\n        }\n        const icon = props.hasFeedback && iconType ? (<span className={`${prefixCls}-item-children-icon`}>\n          <Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>\n        </span>) : null;\n        return (<div className={classes}>\n        <span className={`${prefixCls}-item-children`}>\n          {c1}\n          {icon}\n        </span>\n        {c2}\n        {c3}\n      </div>);\n    }\n    renderWrapper(prefixCls, children) {\n        return (<FormContext.Consumer key=\"wrapper\">\n        {({ wrapperCol: contextWrapperCol, vertical }) => {\n            const { wrapperCol } = this.props;\n            const mergedWrapperCol = ('wrapperCol' in this.props ? wrapperCol : contextWrapperCol) || {};\n            const className = classNames(`${prefixCls}-item-control-wrapper`, mergedWrapperCol.className);\n            // No pass FormContext since it's useless\n            return (<FormContext.Provider value={{ vertical }}>\n              <Col {...mergedWrapperCol} className={className}>\n                {children}\n              </Col>\n            </FormContext.Provider>);\n        }}\n      </FormContext.Consumer>);\n    }\n    isRequired() {\n        const { required } = this.props;\n        if (required !== undefined) {\n            return required;\n        }\n        if (this.getOnlyControl()) {\n            const meta = this.getMeta() || {};\n            const validate = meta.validate || [];\n            return validate\n                .filter((item) => !!item.rules)\n                .some((item) => {\n                return item.rules.some((rule) => rule.required);\n            });\n        }\n        return false;\n    }\n    renderLabel(prefixCls) {\n        return (<FormContext.Consumer key=\"label\">\n        {({ vertical, labelAlign, labelCol: contextLabelCol, colon: contextColon, }) => {\n            const { label, labelCol, colon, id } = this.props;\n            const required = this.isRequired();\n            const mergedLabelCol = ('labelCol' in this.props ? labelCol : contextLabelCol) || {};\n            const labelClsBasic = `${prefixCls}-item-label`;\n            const labelColClassName = classNames(labelClsBasic, labelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className);\n            let labelChildren = label;\n            // Keep label is original where there should have no colon\n            const computedColon = colon === true || (contextColon !== false && colon !== false);\n            const haveColon = computedColon && !vertical;\n            // Remove duplicated user input colon\n            if (haveColon && typeof label === 'string' && label.trim() !== '') {\n                labelChildren = label.replace(/[：|:]\\s*$/, '');\n            }\n            const labelClassName = classNames({\n                [`${prefixCls}-item-required`]: required,\n                [`${prefixCls}-item-no-colon`]: !computedColon,\n            });\n            return label ? (<Col {...mergedLabelCol} className={labelColClassName}>\n              <label htmlFor={id || this.getId()} className={labelClassName} title={typeof label === 'string' ? label : ''} onClick={this.onLabelClick}>\n                {labelChildren}\n              </label>\n            </Col>) : null;\n        }}\n      </FormContext.Consumer>);\n    }\n    renderChildren(prefixCls) {\n        const { children } = this.props;\n        return [\n            this.renderLabel(prefixCls),\n            this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls))),\n        ];\n    }\n    render() {\n        return <ConfigConsumer>{this.renderFormItem}</ConfigConsumer>;\n    }\n}\nFormItem.defaultProps = {\n    hasFeedback: false,\n};\nFormItem.propTypes = {\n    prefixCls: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    labelAlign: PropTypes.string,\n    labelCol: PropTypes.object,\n    help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    validateStatus: PropTypes.oneOf(ValidateStatuses),\n    hasFeedback: PropTypes.bool,\n    wrapperCol: PropTypes.object,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    children: PropTypes.node,\n    colon: PropTypes.bool,\n};\n"],"file":"FormItem.js"}