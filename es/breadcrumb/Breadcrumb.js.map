{"version":3,"sources":["breadcrumb/Breadcrumb.jsx"],"names":["React","PropTypes","cloneElement","classNames","BreadcrumbItem","ConfigConsumer","warning","getBreadcrumbName","route","params","breadcrumbName","paramsKeys","Object","keys","join","name","replace","RegExp","replacement","key","defaultItemRender","routes","paths","isLastItem","indexOf","length","Breadcrumb","arguments","renderBreadcrumb","getPrefixCls","crumbs","props","customizePrefixCls","prefixCls","separator","style","className","children","itemRender","map","path","forEach","push","Children","element","index","type","__ANT_BREADCRUMB_ITEM","Component","defaultProps","propTypes","string","node","array","object","linkRender","func","nameRender"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { cloneElement } from 'react';\nimport classNames from 'classnames';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction getBreadcrumbName(route, params) {\n    if (!route.breadcrumbName) {\n        return null;\n    }\n    const paramsKeys = Object.keys(params).join('|');\n    const name = route.breadcrumbName.replace(new RegExp(`:(${paramsKeys})`, 'g'), (replacement, key) => params[key] || replacement);\n    return name;\n}\nfunction defaultItemRender(route, params, routes, paths) {\n    const isLastItem = routes.indexOf(route) === routes.length - 1;\n    const name = getBreadcrumbName(route, params);\n    return isLastItem ? <span>{name}</span> : <a href={`#/${paths.join('/')}`}>{name}</a>;\n}\nexport default class Breadcrumb extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBreadcrumb = ({ getPrefixCls }) => {\n            let crumbs;\n            const { prefixCls: customizePrefixCls, separator, style, className, routes, params = {}, children, itemRender = defaultItemRender, } = this.props;\n            const prefixCls = getPrefixCls('breadcrumb', customizePrefixCls);\n            if (routes && routes.length > 0) {\n                const paths = [];\n                crumbs = routes.map(route => {\n                    route.path = route.path || '';\n                    let path = route.path.replace(/^\\//, '');\n                    Object.keys(params).forEach(key => {\n                        path = path.replace(`:${key}`, params[key]);\n                    });\n                    if (path) {\n                        paths.push(path);\n                    }\n                    return (<BreadcrumbItem separator={separator} key={route.breadcrumbName || path}>\n            {itemRender(route, params, routes, paths)}\n          </BreadcrumbItem>);\n                });\n            }\n            else if (children) {\n                crumbs = React.Children.map(children, (element, index) => {\n                    if (!element) {\n                        return element;\n                    }\n                    warning(element.type && element.type.__ANT_BREADCRUMB_ITEM, 'Breadcrumb', \"Only accepts Breadcrumb.Item as it's children\");\n                    return cloneElement(element, {\n                        separator,\n                        key: index,\n                    });\n                });\n            }\n            return (<div className={classNames(className, prefixCls)} style={style}>\n        {crumbs}\n      </div>);\n        };\n    }\n    componentDidMount() {\n        const props = this.props;\n        warning(!('linkRender' in props || 'nameRender' in props), 'Breadcrumb', '`linkRender` and `nameRender` are removed, please use `itemRender` instead, ' +\n            'see: https://u.ant.design/item-render.');\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBreadcrumb}</ConfigConsumer>;\n    }\n}\nBreadcrumb.defaultProps = {\n    separator: '/',\n};\nBreadcrumb.propTypes = {\n    prefixCls: PropTypes.string,\n    separator: PropTypes.node,\n    routes: PropTypes.array,\n    params: PropTypes.object,\n    linkRender: PropTypes.func,\n    nameRender: PropTypes.func,\n};\n"],"file":"Breadcrumb.js"}